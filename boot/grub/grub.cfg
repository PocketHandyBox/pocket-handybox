set timeout=30
set default=phb-default

set distname='PocketHandyBox'
set menuname="PHB 64bit"
set menuname5="PHB64 K510"
set menuname32="PHB 32bit"
export distname
export menuname
export menuname5
export menuname32

set toram=copy2ram
export toram

set mit="mitigations=off ibt=off"
set nvmedef="nvme_core.default_ps_max_latency_us=5500"
export mit
export nvmedef

set from="from=/"
export from

if [ -z "$vtoy_iso_part" ]; then
	loadfont unicode
	set menu_color_normal=white/black
	set menu_color_highlight=black/light-gray
	export menu_color_normal
	export menu_color_highlight
	insmod all_video
fi

if [ -n "$vtoy_gfxmode" ]; then
	set gfxmode=$vtoy_gfxmode
	set gfxpayload=keep
else
	set gfxmode=1024x768
	set gfxpayload=keep
fi

if [ -n "$vtoy_theme" ]; then
	vt_set_theme
	terminal_output gfxterm
elif [ "$vtoy_display_mode" = "CLI" ]; then
	terminal_output console
elif [ -f $prefix/themes/ventoy/theme.txt ]; then
	set theme=$prefix/themes/ventoy/theme.txt
	terminal_output gfxterm
fi

if [ -n "$vtoy_iso_part" ]; then
	vt_cur_menu_lang vtCurLang
	set langm="lang=$vtCurLang"
	export langm
	set nocd=nocd
	export nocd
	if [ -z "$vt_chosen_path" ]; then
		set root=$vtoy_iso_part
	fi
elif [ ! -f /live/vmlinuz1 ]; then
	search.file /live/vmlinuz1 root
fi

if [ -n "$vt_chosen_path" ]; then
	set from="from=$vt_chosen_path"
	export from
	vt_img_unhook_root
	vt_unset_boot_opt
elif [ -n "$iso_path" ]; then
	set from="from=$iso_path"
	export from
fi

function phb {
echo "Loading phb $vnc $@"
linux /live/vmlinuz1 $nocd $from $langm $vnc $mit $nvmedef $@
initrd /live/initrd1.xz
}

function phb5 {
echo "Loading phb5 $vnc $@"
linux /live/k510/vmlinuz1 $nocd $from $langm $vnc $mit $nvmedef $@
initrd /live/k510/initrd1.xz
}

function phb32 {
echo "Loading phb32 $vnc $@"
linux /live32/vmlinuz1 $nocd $from $langm $vnc $mit $@
initrd /live32/initrd1.xz
}

if [ -n "$vtoy_iso_part" ]; then
	menuentry '[../] ISO/WIM/IMG Menu (Esc)' --class=vtoyret VTOY_RET {echo 'Return ...'}
fi

function copy2ram_toggle {
	menuentry "Copy2RAM Toggle" {
	if [ -n "$toram" ]; then unset toram
		echo 'Copy2RAM disabled'
	else set toram=copy2ram
		export toram
		echo 'Copy2RAM enabled'
	fi
	sleep 1
	}
}
copy2ram_toggle

menuentry "$distname 64bit Linux" --id phb-default {phb noauto $toram nvidia=detect}

if [ -f /live/k510/vmlinuz1 ]; then
	menuentry "$distname 64bit Kernel 5.10" {phb5 noauto $toram nvidia=detect}
fi

if [ -f /live32/vmlinuz1 ]; then
submenu "[$distname 32bit Linux]" {
	set default=1
	copy2ram_toggle
	menuentry "$distname 32bit Linux" {phb32 noauto $toram}
	menuentry "$menuname32 text (do not run startx)" {phb32 noauto $toram text}
	menuentry "$menuname32 (disable HDD/SSD AHCI and NVMe drivers)" {phb32 noauto $toram modprobe.blacklist=ahci,nvme}
	menuentry "$menuname32 nomodeset (disable all GPU drivers)" {phb32 noauto $toram nomodeset}
	menuentry "$menuname32 (disable AMD GPU drivers)" {phb32 noauto $toram modprobe.blacklist=radeon,amdgpu}
	menuentry "$menuname32 (disable NVIDIA GPU drivers)" {phb32 noauto $toram modprobe.blacklist=nouveau}
}
fi

submenu "[PHB64 Advanced Options]" {
	set default=1
	copy2ram_toggle
	menuentry "$menuname NVIDIA Open Kernel" {phb noauto $toram nvidia=nvopen}
	menuentry "$menuname NVIDIA Legacy 470xx" {phb noauto $toram nvidia=nv470}
	menuentry "$menuname NVIDIA Legacy 390xx" {phb noauto $toram nvidia=nv390}

	if [ -f /live/k510/vmlinuz1 ]; then
	menuentry "$menuname5 NVIDIA Legacy 390xx" {phb5 noauto $toram nvidia=nv390}
	menuentry "$menuname5 NVIDIA Legacy 340xx" {phb5 noauto $toram nvidia=nv340}
	fi

	menuentry "$menuname text (do not run startx)" {phb noauto $toram nvidia=detect text}
	menuentry "$menuname (disable HDD/SSD AHCI and NVMe drivers)" {phb noauto $toram nvidia=detect modprobe.blacklist=ahci,nvme}
	menuentry "$menuname nomodeset (disable all GPU drivers)" {phb noauto $toram nomodeset}
	menuentry "$menuname (disable AMD GPU drivers)" {phb noauto $toram modprobe.blacklist=radeon,amdgpu}
	menuentry "$menuname (disable NVIDIA GPU drivers)" {phb noauto $toram modprobe.blacklist=nouveau}

	if [ -f /live/k510/vmlinuz1 ]; then
	menuentry "$menuname5 text (do not run startx)" {phb5 noauto $toram nvidia=detect text}
	menuentry "$menuname5 (disable HDD/SSD AHCI and NVMe drivers)" {phb5 noauto $toram nvidia=detect modprobe.blacklist=ahci,nvme}
	menuentry "$menuname5 nomodeset (disable all GPU drivers)" {phb5 noauto $toram nomodeset}
	menuentry "$menuname5 (disable AMD GPU drivers)" {phb5 noauto $toram modprobe.blacklist=radeon,amdgpu}
	menuentry "$menuname5 (disable NVIDIA GPU drivers)" {phb5 noauto $toram modprobe.blacklist=nouveau}
	fi
}

submenu "[PHB extgrub.cfg Entry]" {
	if [ -f /live/extgrub.cfg ]; then source /live/extgrub.cfg
	elif [ -f /phb/extgrub.cfg ]; then source /phb/extgrub.cfg
	elif search.file /phb/extgrub.cfg extgrub_root
	then source ($extgrub_root)/phb/extgrub.cfg
	fi
}

menuentry "Enable VNC access" {
	echo 'Setup password to access by VNC:'
	echo '(leave it empty to enable access without password)'
	read vncpass
	if [ -n "$vncpass" ]; then
		set vnc="vnc=$vncpass"
		export vnc
		echo ''
	else
		set vnc=vnc
		export vnc
	fi
	echo 'VNC enabled'
	sleep 1
}
