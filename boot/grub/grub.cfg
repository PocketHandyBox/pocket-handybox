set timeout=30
set default=phb-default-toram

if [ -z "$vtoy_iso_part" ]; then
	loadfont unicode
	set menu_color_normal=white/black
	set menu_color_highlight=black/light-gray
	export menu_color_normal
	export menu_color_highlight
	insmod all_video
fi

if [ -n "$vtoy_gfxmode" ]; then
	set gfxmode=$vtoy_gfxmode
	set gfxpayload=keep
else
	set gfxmode=1024x768
	set gfxpayload=keep
fi

if [ -n "$vtoy_theme" ]; then
	vt_set_theme
	terminal_output gfxterm
elif [ "$vtoy_display_mode" = "CLI" ]; then
	terminal_output console
elif [ -f $prefix/themes/ventoy/theme.txt ]; then
	set theme=$prefix/themes/ventoy/theme.txt
	terminal_output gfxterm
fi

set from="from=/"
set mit="mitigations=off"
set nvmedef="nvme_core.default_ps_max_latency_us=5500"
export from
export mit
export nvmedef

if [ -n "$vtoy_iso_part" ]; then
	vt_cur_menu_lang vtCurLang
	set langm="lang=$vtCurLang"
	export langm
	set nocd=nocd
	export nocd
	if [ -z "$vt_chosen_path" ]; then
		set root=$vtoy_iso_part
	fi
elif [ ! -f /live/vmlinuz1 ]; then
	search.file /live/vmlinuz1 root
fi

if [ -n "$vt_chosen_path" ]; then
	set from="from=$vt_chosen_path"
	export from
	vt_img_unhook_root
	vt_unset_boot_opt
elif [ -n "$iso_path" ]; then
	set from="from=$iso_path"
	export from
fi

function phb {
echo 'Loading ...'
linux /live/vmlinuz1 $nocd $from $langm $mit $nvmedef $@
initrd /live/initrd1.xz
}

function phb5 {
echo 'Loading ...'
linux /live/k510/vmlinuz1 $nocd $from $langm $mit $nvmedef $@
initrd /live/k510/initrd1.xz
}

function phb32 {
echo 'Loading ...'
linux /live32/vmlinuz1 $nocd $from $langm $mit $@
initrd /live32/initrd1.xz
}

if [ -n "$vtoy_iso_part" ]; then
	menuentry '[../] ISO/WIM/IMG Menu (Esc)' --class=vtoyret VTOY_RET {echo 'Return ...'}
fi

set menuname="PHB 64bit"
set menuname5="PHB64 K510"
set menuname32="PHB 32bit"
export menuname
export menuname5
export menuname32

menuentry "PHB 64bit Linux" --id phb-default {phb noauto nvidia=detect}
menuentry "$menuname Copy2RAM" --id phb-default-toram {phb noauto nvidia=detect copy2ram}

if [ -f /live/k510/vmlinuz1 ]; then
	menuentry "PHB 64bit Kernel 5.10" {phb5 noauto nvidia=detect}
	menuentry "$menuname5 Copy2RAM" {phb5 noauto nvidia=detect copy2ram}
fi

if [ -f /live32/vmlinuz1 ]; then
submenu "[PHB 32bit Linux]" {
	menuentry "PHB 32bit Linux" {phb32 noauto}
	menuentry "$menuname32 Copy2RAM" {phb32 noauto copy2ram}

	menuentry "$menuname32 text (do not run startx)" {phb32 noauto text}
	menuentry "$menuname32 text Copy2RAM" {phb32 noauto text copy2ram}
	menuentry "$menuname32 (disable HDD/SSD AHCI and NVMe drivers)" {phb32 noauto modprobe.blacklist=ahci,nvme}
	menuentry "$menuname32 nomodeset (disable all GPU drivers)" {phb32 noauto nomodeset}
	menuentry "$menuname32 (disable AMD GPU drivers)" {phb32 noauto modprobe.blacklist=radeon,amdgpu}
	menuentry "$menuname32 (disable NVIDIA GPU drivers)" {phb32 noauto modprobe.blacklist=nouveau}
}
fi

submenu "[PHB64 Advanced Options]" {
	menuentry "$menuname load=cuda" {phb noauto nvidia=detect load=cuda}
	menuentry "$menuname load=cuda Copy2RAM" {phb noauto nvidia=detect load=cuda copy2ram}
	menuentry "$menuname NV Legacy 470xx" {phb noauto nvidia=nv470}
	menuentry "$menuname NV Legacy 470xx Copy2RAM" {phb noauto nvidia=nv470 copy2ram}
	menuentry "$menuname NV Legacy 390xx" {phb noauto nvidia=nv390}
	menuentry "$menuname NV Legacy 390xx Copy2RAM" {phb noauto nvidia=nv390 copy2ram}

	if [ -f /live/k510/vmlinuz1 ]; then
	menuentry "$menuname5 NV Legacy 390xx" {phb5 noauto nvidia=nv390}
	menuentry "$menuname5 NV Legacy 390xx Copy2RAM" {phb5 noauto nvidia=nv390 copy2ram}
	menuentry "$menuname5 NV Legacy 340xx" {phb5 noauto nvidia=nv340}
	menuentry "$menuname5 NV Legacy 340xx Copy2RAM" {phb5 noauto nvidia=nv340 copy2ram}
	fi

	menuentry "$menuname text (do not run startx)" {phb noauto nvidia=detect text}
	menuentry "$menuname text Copy2RAM" {phb noauto nvidia=detect text copy2ram}
	menuentry "$menuname (disable HDD/SSD AHCI and NVMe drivers)" {phb noauto nvidia=detect modprobe.blacklist=ahci,nvme}
	menuentry "$menuname nomodeset (disable all GPU drivers)" {phb noauto nomodeset}
	menuentry "$menuname (disable AMD GPU drivers)" {phb noauto modprobe.blacklist=radeon,amdgpu}
	menuentry "$menuname (disable NVIDIA GPU drivers)" {phb noauto modprobe.blacklist=nouveau}

	if [ -f /live/k510/vmlinuz1 ]; then
	menuentry "$menuname5 text (do not run startx)" {phb5 noauto nvidia=detect text}
	menuentry "$menuname5 text Copy2RAM" {phb5 noauto nvidia=detect text copy2ram}
	menuentry "$menuname5 (disable HDD/SSD AHCI and NVMe drivers)" {phb5 noauto nvidia=detect modprobe.blacklist=ahci,nvme}
	menuentry "$menuname5 nomodeset (disable all GPU drivers)" {phb5 noauto nomodeset}
	menuentry "$menuname5 (disable AMD GPU drivers)" {phb5 noauto modprobe.blacklist=radeon,amdgpu}
	menuentry "$menuname5 (disable NVIDIA GPU drivers)" {phb5 noauto modprobe.blacklist=nouveau}
	fi
}

submenu "[PHB extgrub.cfg Entry]" {
	if [ -f /live/extgrub.cfg ]; then source /live/extgrub.cfg
	elif [ -f /phb/extgrub.cfg ]; then source /phb/extgrub.cfg
	elif search.file /phb/extgrub.cfg extgrub_root
	then source ($extgrub_root)/phb/extgrub.cfg
	fi
}
